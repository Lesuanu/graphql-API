// <auto-generated />
using GloryFarm.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GloryFarm.API.Migrations
{
    [DbContext(typeof(GloryFarmContext))]
    [Migration("20220422194558_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GloryFarm.Models.Farm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FarmAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FarmCapacity")
                        .HasColumnType("integer");

                    b.Property<string>("FarmHistory")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FarmIdNumber")
                        .HasColumnType("integer");

                    b.Property<string>("FarmName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FarmProduction")
                        .HasColumnType("integer");

                    b.Property<string>("FarmStandard")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GloryFarms");
                });

            modelBuilder.Entity("GloryFarm.Models.FarmAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FarmInfoId")
                        .HasColumnType("integer");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("integer");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FarmInfoId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("GloryFarm.Models.FarmEmployees", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeWages")
                        .HasColumnType("integer");

                    b.Property<int>("FarmDepartment")
                        .HasColumnType("integer");

                    b.Property<int>("FarmEmployeeId")
                        .HasColumnType("integer");

                    b.Property<int>("FarmId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FarmId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("GloryFarm.Models.FarmAddress", b =>
                {
                    b.HasOne("GloryFarm.Models.Farm", "FarmInfo")
                        .WithMany("FarmAddresses")
                        .HasForeignKey("FarmInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FarmInfo");
                });

            modelBuilder.Entity("GloryFarm.Models.FarmEmployees", b =>
                {
                    b.HasOne("GloryFarm.Models.Farm", "Farm")
                        .WithMany("FarmEmployees")
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Farm");
                });

            modelBuilder.Entity("GloryFarm.Models.Farm", b =>
                {
                    b.Navigation("FarmAddresses");

                    b.Navigation("FarmEmployees");
                });
#pragma warning restore 612, 618
        }
    }
}
